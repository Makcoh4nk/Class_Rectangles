#include "Rectangles.h"


void main()
{
	setlocale(LC_ALL, "Russian");

	srand((unsigned)time(NULL));

	Rectangle A, B, C;


	cout << "\n--------------------------------------------------------";
	cout << "\n1. Задание координат прямоугольника (Левая нижняя и правая верхняя)";
	cout << "\n2. Перемещение прямоугольника";
	cout << "\n3. Изменение размера прямоугольника";
	cout << "\n4. Построние наименьшего прямоугольника, включающего два заданных";
	cout << "\n5. Нахождение общей части двух прямоугольников";
	cout << "\n--------------------------------------------------------";

	while ((A.Get(0) >= A.Get(2)) || (A.Get(1) >= A.Get(3)))
	{
		for (int i = 0; i < N; i++)
		{
			int temp = (rand() % 100)*(int)pow((-1), rand() % 2);
			A.Set(i, temp);
		}
	}

	while ((B.Get(0) >= B.Get(2)) || (B.Get(1) >= B.Get(3)))
	{
		for (int i = 0; i < N; i++)
		{
			int temp = (rand() % 100)*(int)pow((-1), rand() % 2);
			B.Set(i, temp);
		}
	}

	cout << "\n1. Координаты прямоугольника: (" << A.Get(0) << ',' << A.Get(1) << ");(" << A.Get(2) << ',' << A.Get(3) << ')';

	cout << "\n--------------------------------------------------------";
	cout << "\n2. Перемещение прямоугольника" << endl;
	int Left = 1 + rand() % 10;
	cout << "\nПереместить прямоугольник ВЛЕВО на " << Left << " клеток" << endl;
	A.MoveRectX(-Left);
	cout << "Изменённые координаты прямоугольника: (" << A.Get(0) << ',' << A.Get(1) << ");(" << A.Get(2) << ',' << A.Get(3) << ')' << endl;
	int Up = 1 + rand() % 10;
	cout << "\nПереместить прямоугольник ВВЕРХ на " << Up << " клеток" << endl;
	A.MoveRectY(Up);
	cout << "Изменённые координаты прямоугольника: (" << A.Get(0) << ',' << A.Get(1) << ");(" << A.Get(2) << ',' << A.Get(3) << ')' << endl;
	int Right = 1 + rand() % 10;
	cout << "\nПереместить прямоугольник ВПРАВО на " << Right << " клеток" << endl;
	A.MoveRectX(Right);
	cout << "Изменённые координаты прямоугольника: (" << A.Get(0) << ',' << A.Get(1) << ");(" << A.Get(2) << ',' << A.Get(3) << ')' << endl;
	int Down = 1 + rand() % 10;
	cout << "\nПереместить прямоугольник ВНИЗ на " << Down << " клеток" << endl;
	A.MoveRectY(-Down);

	cout << "\nНовые координаты прямоугольника: (" << A.Get(0) << ',' << A.Get(1) << ");(" << A.Get(2) << ',' << A.Get(3) << ')';

	cout << "\n--------------------------------------------------------";

	cout << "\n3. Изменение размера прямоугольника" << endl;
	A.ChangeSize();
	cout << "Новые координаты прямоугольника: (" << A.Get(0) << ',' << A.Get(1) << ");(" << A.Get(2) << ',' << A.Get(3) << ')';

	cout << "\n--------------------------------------------------------";

	cout << "\n4. Нахождение наименьшего прямоугольника, включающего два заданных";
	cout << "\nВ качестве первого прямоугольника берётся базовый";

	cout << "\n\nКоординаты первого прямоугольника: (" << A.Get(0) << ',' << A.Get(1) << ");(" << A.Get(2) << ',' << A.Get(3) << ')';
	cout << "\nКоординаты второго прямоугольника: (" << B.Get(0) << ',' << B.Get(1) << ");(" << B.Get(2) << ',' << B.Get(3) << ')';

	C = A.BuildRect(B);

	cout << "\n\nКоординаты прямоугольника, включающего два заданных: (" << C.Get(0) << ',' << C.Get(1) << ");(" << C.Get(2) << ',' << C.Get(3) << ')';

	cout << "\n--------------------------------------------------------";

	cout << "\n5. Нахождение общей части двух прямоугольников";
	cout << "\nВ качестве первого прямоугольника берётся базовый"<< endl;

	cout << "\nКоординаты первого прямоугольника: (" << A.Get(0) << ',' << A.Get(1) << ");(" << A.Get(2) << ',' << A.Get(3) << ')';
	cout << "\nКоординаты второго прямоугольника: (" << B.Get(0) << ',' << B.Get(1) << ");(" << B.Get(2) << ',' << B.Get(3) << ')';

	C = A.CommonPart(B);

	if ((C.Get(0) == 0) && (C.Get(1) == 0) && (C.Get(2) == 0) && (C.Get(3) == 0))
		cout << "\nПрямоугольники не пересекаются";
	else
		if ((C.Get(0) == C.Get(2)) || (C.Get(1) == C.Get(3)))
			cout << "\n Пересечение не является прямоугольником";
		else
			cout << "\n\nКоординаты прямоугольника, являющегося общей частью заданных: (" << C.Get(0) << ',' << C.Get(1) << ");(" << C.Get(2) << ',' << C.Get(3) << ')';

	cout << "\n--------------------------------------------------------";

	void Test_for_point_1(A);
	void Test_for_point_2();
	void Test_for_point_3();
	void Test_for_point_4(A,B);
	void Test_for_point_5(A,B);

	system("pause");
}